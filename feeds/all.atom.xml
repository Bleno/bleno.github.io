<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bleno Developer</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2017-05-11T09:34:00-03:00</updated><entry><title>Instalando e usando docker compose</title><link href="/instalando-e-usando-docker-compose.html" rel="alternate"></link><published>2017-05-11T09:34:00-03:00</published><updated>2017-05-11T09:34:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2016-12-26:instalando-e-usando-docker-compose.html</id><summary type="html">&lt;p&gt;Compose é a ferramenta que permite definir e executar multiplos containers. É uma ótima forma
para criar ambientes através de seu arquivo de configuração no formato &lt;code&gt;.yml&lt;/code&gt;.
 Usando um único comando é possível iniciar todos os serviços a partir do seu arquivo de configuração.&lt;/p&gt;
&lt;h1&gt;Verifique se já possui o docker instalado&lt;/h1&gt;
&lt;p&gt;Caso não tenha do docker instalado veja &lt;a href="/instalando-docker-ubuntu-14-04.html"&gt;instalando o docker&lt;/a&gt; para mais informações&lt;/p&gt;
&lt;h1&gt;Instalado o docker compose&lt;/h1&gt;
&lt;p&gt;Com o docker instalado instale o python-pip&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install -y python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Então, você pode instalar o Docker Compose:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip install docker-compose
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Executando um container com Docker Compose&lt;/h1&gt;
&lt;h2&gt;Exemplo wordpress&lt;/h2&gt;
&lt;p&gt;No exemplo a seguir, será criado um arquivod docker-compose.yml no qual vai subir
dois serviços: Banco de dados e Wordpress.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;version&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;services&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
   &lt;span class="l l-Scalar l-Scalar-Plain"&gt;db&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;image&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;mysql:5.7&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;volumes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
       &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;db_data:/var/lib/mysql&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;restart&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;environment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;somewordpress&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;MYSQL_USER&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;

   &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;depends_on&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
       &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;db&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;image&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress:latest&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ports&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
       &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;8000:80&amp;quot;&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;restart&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;environment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;WORDPRESS_DB_HOST&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;db:3306&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;WORDPRESS_DB_USER&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;
       &lt;span class="l l-Scalar l-Scalar-Plain"&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;wordpress&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;volumes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;db_data&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Então temos dois serviços configurados &lt;em&gt;db&lt;/em&gt; e &lt;em&gt;wordpress&lt;/em&gt;, o serviço db utiliza a imagem mysql:5.7
 onde utiliza o volume db_data e restart always.
  Já o serviço wordpress tem um &lt;em&gt;depends_on&lt;/em&gt; no qual segnifica que esse serviço depende do serviço db.
  Para mais informações ssbre o &lt;a href="https://docs.docker.com/compose/compose-file/"&gt;Compose file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nesse exemplo a cima foi criado uma pasta chamada my_wordpress e o arquivo docker-compose.yml foi salvo dentro dela.&lt;/p&gt;
&lt;p&gt;Agora pra executar basta entrar na poasta my_wordpress fazer o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker-compose up -d
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Parar / apagar&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;docker-compose down&lt;/strong&gt; irá remover os containers e a rede padrão, mas vai preservar o banco de dados do wordpress.
 &lt;strong&gt;docker-composer down --volumes&lt;/strong&gt; irá remover os containers, rede padrão e o banco de dados wordpress.&lt;/p&gt;</summary><category term="Docker"></category><category term="Container"></category><category term="Compose"></category><category term="Ferramentas"></category></entry><entry><title>Certificado SSL Para Website com NGINX</title><link href="/certificado-ssl-para-website-com-nginx.html" rel="alternate"></link><published>2016-11-09T12:00:00-02:00</published><updated>2016-11-09T12:00:00-02:00</updated><author><name>Bleno Silva</name></author><id>tag:,2016-11-09:certificado-ssl-para-website-com-nginx.html</id><summary type="html">&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://certbot.eff.org/"&gt;Certbot&lt;/a&gt; é um automatizador para instalação de certificados SSL da &lt;a href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt;. 
Como os certificados da Let's Encrypt são válidos por apenas 3 meses a ideia do certbot é&lt;br /&gt;
automatizar a renovação desse certificado além de criar o certificado.&lt;/p&gt;
&lt;h2&gt;Instalar&lt;/h2&gt;
&lt;p&gt;Fazer o download e instalação do certbot-auto script&lt;/p&gt;
&lt;h3&gt;Ubuntu&lt;/h3&gt;
&lt;p&gt;Download&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://dl.eff.org/certbot-auto
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Permissão de execução&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod a+x certbot-auto
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;certbot-auto instala suas próprias dependêncies inclusive atualiza seu próprio código cliente&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./certbot-auto
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Centos 7&lt;/h3&gt;
&lt;p&gt;Verifique se você tem os repositório EPEL repository habilitado, caso não, habilite com o seguinte processo &lt;a href="https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F"&gt;enable the EPEL repository.&lt;/a&gt;
obs: Caso seja Centos 6 pode ser realizado o mesmo processo do ubuntu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; $ sudo yum install certbot
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Gerar o certicado&lt;/h2&gt;
&lt;p&gt;No caso vou gerar o certicado para os seguintes domínios: www.exemple.com exemple.com e api.exemple.com 
usando a opção standalone do certbot-auto, no qual é aconselhável parar o serviço do webserver nginx.&lt;/p&gt;
&lt;h3&gt;ubuntu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./path/to/certbot-auto certonly --standalone -d example.com -d www.example.com -d api.example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;centos 7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ certbot certonly --standalone -d example.com -d www.example.com -d api.example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Os certificados são gerados no caminho parecido com o seguinte&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/letsencrypt/live/example.com/fullchain.pem
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Automatizando e renovando&lt;/h2&gt;
&lt;p&gt;Como disse no inicio, o certificado da Let's Encrypt é válido por 90 dias, então para que seus usuários não sejam pegos de surpresa é altamente recomendável 
que seja feita a renovação o quanto antes.&lt;/p&gt;
&lt;p&gt;Primeiro verifique se o comando de renovação pode ser executado com sucesso, (talvez seja necessário parar o servidor web no caso Nginx)&lt;/p&gt;
&lt;h3&gt;Ubuntu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./path/to/certbot-auto renew --dry-run
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Centos 7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ certbot renew --dry-run
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para renovar o certificado poder ser executado o seguinte comando, o parâmetro --quiet não gera log 
e o parâmetro --no-self-upgrade&lt;/p&gt;
&lt;h3&gt;Ubunutu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./path/to/certbot-auto renew --quiet --no-self-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Centos 7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ certbot renew --quiet --no-self-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pode ser feito um cron para executar esse processo, de renovação.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo crontab -e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicione a seguinte tarefa&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* 2 * * * /path/to/certbot-auto renew &amp;gt;&amp;gt; /var/log/certbot-auto.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Será executado todos os dias às 2 AM em um minuto aleatório(recomendado pelo certbot)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Certbot recomenda também que essa tarefa seja executado duas vezes ao dia para garantir sua funcionalidade,
isso vai do seu critério.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://letsencrypt.org/"&gt;https://letsencrypt.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://certbot.eff.org/"&gt;https://certbot.eff.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infowester.com/linuxcron.php"&gt;http://www.infowester.com/linuxcron.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Web"></category><category term="Webserver"></category><category term="SSL"></category><category term="Certificado"></category><category term="NGINX"></category><category term="Ubuntu"></category><category term="Centos"></category></entry><entry><title>Instalando diferentes versões de Python com pyenv</title><link href="/instalando-diferentes-vers%C3%B5es-de-python-com-pyenv.html" rel="alternate"></link><published>2015-12-25T21:08:00-02:00</published><updated>2015-12-25T21:08:00-02:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-12-25:instalando-diferentes-versões-de-python-com-pyenv.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Hoje resolvi falar do &lt;strong&gt;pyenv&lt;/strong&gt;, que é nada mais nada menos que um gerenciador para instalações de interpretador Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pyenv&lt;/strong&gt; é um simples e magnifico gerenciador de versões Python, essa ferramenta permite instalar várias versões do interpretador Python e alternar entre elas. O que pode facilitar muito para testar aplicações em diversas versões.&lt;/p&gt;
&lt;h2&gt;O que o pyenv faz?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Permite que você altere a versão global do Python&lt;/li&gt;
&lt;li&gt;Alternar entre versões por projeto Python&lt;/li&gt;
&lt;li&gt;Permitem substituir a versão Python com uma variável de ambiente.&lt;/li&gt;
&lt;li&gt;Pesquisa comandos a partir de múltiplas versões do Python em um momento. Isto pode ser útil para testar em todas as versões do Python com &lt;a href="https://pypi.python.org/pypi/tox" title="Clique e conheça"&gt;tox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Como funciona?&lt;/h2&gt;
&lt;p&gt;Então, por alto, o &lt;strong&gt;pyenv&lt;/strong&gt; intercepta comandos Python usando o executável shim que foi colocado na variável de ambiente PATH, no qual determina a versão do Python foi solicitada pela sua aplicação, e passa seus comando junto com a correta instalação Python.
&lt;/p&gt;
&lt;h2&gt;Instalação&lt;/h2&gt;
&lt;h4&gt;Existe a instalação automática&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/yyuu/pyenv-installer"&gt;pyenv-installer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;e a instalação manual que é muito fácil também =).&lt;/p&gt;
&lt;h4&gt;Instalação manual:&lt;/h4&gt;
&lt;p&gt;É basicamente um clone do projeto, um ótimo local para instalação é [$HOME/.pyenv] , mas você pode instalar em qualquer lugar que desejar =).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/yyuu/pyenv.git ~/.pyenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Definir a variável de ambiente PYENV_ROOT:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicionar pyenv init ao seu shel:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eval &amp;quot;$(pyenv init -)&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Reiniciar o shel para que as alterações façam efeito:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;exec $SHELL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalar Python. As versões do Python são instaladas em $PYENV_ROOT/versions. Por exemplo vou instalar o Python 3.5.1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Atualizando&lt;/h2&gt;
&lt;p&gt;Se você já tem o &lt;strong&gt;pyenv&lt;/strong&gt; instalado, você pode atualizar usando o comando git pull:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.pyenv
$ git pull
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Comando básicos do &lt;strong&gt;pyenv&lt;/strong&gt;:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyenv install x.x.x #instala uma versão específica do Python
pyenv uninstall x.x.x #desinstala uma versão específica do Python
pyenv versions # lista todas versões de Python instalada
pyenv global # Mostra a versão do Python global ou configura passando o número da versão como parâmetro
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Para mais informações e ajuda:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyenv help &amp;lt;comando&amp;gt; # Para informações específicas sobre um comando.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Desinstalando &lt;strong&gt;pyenv&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Remova a linha pyenv init do seu shel (.bashrc)
Remova  o diretório pyenv shims da várial PATH&lt;/p&gt;
&lt;p&gt;Então, remova todas as versões de Python instaladas&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf `pyenv root`
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;h2&gt;Local do projeto:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Para mais informações do projeto&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/yyuu/pyenv"&gt;https://github.com/yyuu/pyenv&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Python"></category><category term="pyenv"></category></entry><entry><title>Instalando Node JS Ubuntu 14.04</title><link href="/instalando-nodejs.html" rel="alternate"></link><published>2015-07-11T16:24:00-03:00</published><updated>2015-07-11T16:24:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-07-11:instalando-nodejs.html</id><summary type="html">&lt;h1&gt;Instalando via script&lt;/h1&gt;
&lt;p&gt;Esse script automatiza o processo de adicionar repositório.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Executando a instalação&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install -y nodejs
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Atualizando npm&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo npm install npm -g
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Para compilar algumas ferramentas nativas é necessário instalar o build tools&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install -y build-essential
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Referências:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.npmjs.com/getting-started/installing-node#updating-npm"&gt;https://docs.npmjs.com/getting-started/installing-node#updating-npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"&gt;https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="nodejs"></category><category term="node"></category><category term="js"></category><category term="instalar"></category><category term="javascript"></category><category term="npm"></category><category term="package manager"></category></entry><entry><title>Instalando Go</title><link href="/instalando-go.html" rel="alternate"></link><published>2015-06-07T16:29:00-03:00</published><updated>2015-06-07T16:29:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-06-07:instalando-go.html</id><summary type="html">&lt;h1&gt;Baixar e extrair no diretório /usr/local&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -C /usr/local -xzf go1.6.2.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Exportar variável de ambiente&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;#39;export PATH=$PATH:/usr/local/go/bin&amp;#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Teste sua instalação&lt;/h1&gt;
&lt;p&gt;Vamos criar um workspace no seguinte diretório $HOME/work&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p ~/work/src/github.com/user/hello inside
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Exportar variável de ambiente&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo  &amp;#39;export GOPATH=$HOME/work&amp;#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crie um arquivo chamdo hello.go no seguinte diretório ~/work/src/github.com/user/hello . 
Altere user para seu usuário do github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi ~/work/src/github.com/user/hello/hello.go
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Colar o seguinte conteúdo no arquivo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello, world&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E agora compilar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;go install github.com/user/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Então executar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$GOPATH/bin/hello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se você ver p "hello, word" , então sua instalação do GO está funcionando.&lt;/p&gt;</summary><category term="Language"></category><category term="Programmer"></category><category term="Install"></category><category term="Go"></category><category term="Compile"></category><category term="Hello Word"></category></entry><entry><title>Gerenciando virtualenv com pyenv-virtualenv</title><link href="/gerenciando-virtualenv-com-pyenv-virtualenv.html" rel="alternate"></link><published>2015-04-15T12:00:00-03:00</published><updated>2015-04-15T12:00:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-04-15:gerenciando-virtualenv-com-pyenv-virtualenv.html</id><summary type="html">&lt;h1&gt;Overview&lt;/h1&gt;
&lt;p&gt;pyenv-virtualenv é um plugin do pyenv que provê alguns recursospara gerenciar virtualenvs para ambientes Python em Sistemas "Like Unix".&lt;/p&gt;
&lt;h1&gt;Instalação&lt;/h1&gt;
&lt;h2&gt;Instalando como um plugin do virtualenv&lt;/h2&gt;
&lt;p&gt;Iremos instalar o pyenv-virtualenv como um plugin do pyenv no seguinte diretório ~/.pyenv/plugins/pyenv-virtualenv&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clone o projeto dentro do diretório de plugin do pyenv:&lt;/p&gt;
&lt;p&gt;$ git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adicionar pyenv virtualenv-init para o shell  e habilitar o auto-activation dos virtualenvs. Esse recurso é opcional mas bastante útil.&lt;/p&gt;
&lt;p&gt;$ echo 'eval "$(pyenv virtualenv-init -)"' &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reinicie o shell para habilitar pyenv-virtualenv&lt;/p&gt;
&lt;p&gt;$ exec "$SHELL"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Usando pyenv virtualenv com pyenv&lt;/h1&gt;
&lt;p&gt;Para criar um virtualenv para o Python usando pyenv, execute pyenv virtualenv, especifique a versão Python que você quer e o nome do diretório do virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv virtualenv &lt;span class="m"&gt;2&lt;/span&gt;.7.10 my-virtual-env-2.7.10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Criando um virtualenv apartir da versão atual&lt;/p&gt;
&lt;p&gt;Verifique qual versão python você está utillizando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv version
&lt;span class="m"&gt;3&lt;/span&gt;.4.3 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; by /home/yyuu/.pyenv/version&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crie o virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv virtualenv venv34
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Fonte&lt;/h1&gt;
&lt;p&gt;https://github.com/yyuu/pyenv-virtualenv&lt;/p&gt;</summary><category term="Python"></category><category term="pyenv"></category><category term="virtualenv"></category><category term="pyenv-virtualenv"></category></entry><entry><title>Instalando Docker Ubuntu 14.04</title><link href="/instalando-docker-ubuntu-14-04.html" rel="alternate"></link><published>2015-04-15T09:23:00-03:00</published><updated>2015-04-15T09:23:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-04-11:instalando-docker-ubuntu-14-04.html</id><summary type="html">&lt;h1&gt;Dependências&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update

sudo apt-get upgrade

sudo apt-get install apt-transport-https ca-certificates

sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Instalação rápida&lt;/h1&gt;
&lt;p&gt;Baixar e executar o script bash de instalação. O script já adiciona o repositório e faz a instalação necessária.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -sSL https://get.docker.com/ | sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicionar o seu usuário ao grupo docker para executar os comandos docker sem precisar de sudo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo usermod -aG docker username
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Apartir daqui já é possível usar e fazer o hello word docker =)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run hello-world
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Deve apresentar a seguinte saída:&lt;/p&gt;
&lt;pre&gt;
Unable to find image 'hello-world:latest' locally
    latest: Pulling from hello-world
    a8219747be10: Pull complete
    91c95931e552: Already exists
    hello-world:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.
    Digest: sha256:aa03e5d0d5553b4c3473e89c8619cf79df368babd1.7.1cf5daeb82aab55838d
    Status: Downloaded newer image for hello-world:latest
    Hello from Docker.
    This message shows that your installation appears to be working correctly.

    To generate this message, Docker took the following steps:
     1. The Docker client contacted the Docker daemon.
     2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
            (Assuming it was not already locally available.)
     3. The Docker daemon created a new container from that image which runs the
            executable that produces the output you are currently reading.
     4. The Docker daemon streamed that output to the Docker client, which sent it
            to your terminal.

    To try something more ambitious, you can run an Ubuntu container with:
     $ docker run -it ubuntu bash

    For more examples and ideas, visit:
     http://docs.docker.com/userguide/
&lt;/pre&gt;

&lt;p&gt;Caso ocorra o seguinte erro docker: &lt;pre&gt;Cannot connect to the Docker daemon. Is the docker daemon running on this host?.&lt;/pre&gt; saia e conecte novamente no servidor ou recarregue o bash.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ou
    bash&lt;/p&gt;
&lt;h1&gt;Instalação via repositório (manual)&lt;/h1&gt;
&lt;h2&gt;Criar arquivo&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/apt/sources.list.d/docker.list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dentro do arquivo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;https://apt.dockerproject.org/repo&lt;/span&gt; &lt;span class="kp"&gt;ubuntu-trusty&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Remover repositório antigo&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get purge lxc-docker
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Prerequisites by Ubuntu Version&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu Wily 15.10&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu Trusty 14.04 (LTS)&lt;/p&gt;
&lt;p&gt;sudo apt-get update&lt;/p&gt;
&lt;p&gt;sudo apt-get install linux-image-extra-$(uname -r)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Ubuntu Precise 12.04 (LTS)
For Ubuntu Precise, Docker requires the 3.13 kernel version. If your kernel version is older than 3.13, you must upgrade it. Refer to this table to see which packages are required for your environment:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update


$ sudo apt-get install linux-image-generic-lts-trusty

$ sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Instalar&lt;/h2&gt;
&lt;p&gt;Agora que os pre requisitos estão instalados, vamos instalar os docker.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update

sudo apt-get install docker-engine

sudo service docker start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Docker"></category><category term="Container"></category><category term="Ferramentas"></category></entry><entry><title>Instalando Elastic com Kibana no Ubuntu 14.04</title><link href="/instalando-elastic-kibana-no-ubuntu-14-04.html" rel="alternate"></link><published>2015-04-15T08:49:00-03:00</published><updated>2015-04-15T08:49:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-01-20:instalando-elastic-kibana-no-ubuntu-14-04.html</id><summary type="html">&lt;p&gt;=== Instalando Elastic com Kibana no Ubuntu 14.04 ===&lt;/p&gt;
&lt;h1&gt;Dependências ====&lt;/h1&gt;
&lt;h2&gt;instalação do Java 7&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:webupd8team/java &amp;amp;&amp;amp; sudo apt-get update

sudo apt-get install oracle-jdk7-installer
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Baixando e instalando o Elastic ====&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.1.1/elasticsearch-2.1.1.tar.gz

tar -zxvf elasticsearch-2.1.1.tar.gz

cd elasticsearch-2.1.1/
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Instalação via pacote .deb&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.1.1/elasticsearch-2.1.1.deb

chmod +x elasticsearch-2.1.1.deb

sudo dpkg -i elasticsearch-2.1.1.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Alterar configurações de acesso (Optional)&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Muitas dessas configurações podem ser vistas em &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html"&gt;Configurações Elastic&lt;/a&gt;, essas configurações vão de acordo com o seu uso e personalização, tal como reservar memória desabilitar o uso de swap entre outras.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi /etc/elasticsearch/elasticsearch.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Liberar porta para acesso externo&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo iptables -A INPUT -p tcp --dport 9200 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Iniciar com sistema&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo update-rc.d elasticsearch defaults 95 10

sudo /etc/init.d/elasticsearch start

curl &amp;#39;http://localhost:9200/?pretty&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Kibana&lt;/h1&gt;
&lt;h2&gt;Fazer o download:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://download.elastic.co/kibana/kibana/kibana-4.1.4-linux-x64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Descompactar:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -zxvf kibana-4.1.4-linux-x64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Abrir o arquivo config/kibana.yml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd kibana-4.1.4-linux-x64
vi config/kibana.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alterar o elasticsearch.url para o endereço do Elastic&lt;/p&gt;
&lt;p&gt;Executar o kibana&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./bin/kibana
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;=======================================================================&lt;/p&gt;
&lt;p&gt;=======================================================================&lt;/p&gt;</summary><category term="Elastic"></category><category term="Kibana"></category></entry><entry><title>Instalando o Tornado Web Framework</title><link href="/instalando-o-tornado-web-framework.html" rel="alternate"></link><published>2015-04-15T09:25:00-03:00</published><updated>2015-04-15T09:25:00-03:00</updated><author><name>Bleno Silva</name></author><id>tag:,2015-01-20:instalando-o-tornado-web-framework.html</id><summary type="html">&lt;p&gt;Para desenvolver a aplicação com o tornado escolhi usar a versão mais recente do python que é a 3.5.1. 
Então com a ajuda da ferramenta &lt;a href="/instalando-diferentes-versões-de-python-com-pyenv.html"&gt;pyenv&lt;/a&gt; vou instalar esta versão do python.&lt;/p&gt;
&lt;h1&gt;Verifica se a versão 3.5.1 esta disponível&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyenv install --list
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Caso não esteja atualizar o pyenv&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /home/bleno/.pyenv/plugins/python-build/../.. &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; cd -
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Instalar o python 3.5.1&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyenv install 3.5.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A resposta esperada será aproximadamente essa&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Installed Python-3.5.1 to /home/bleno/.pyenv/versions/3.5.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;caso tenha problemas com a libbz2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libbz2-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Criar o virtualenv&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv -p /home/bleno/.pyenv/versions/3.5.1/bin/python project
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Instalando o Tornado&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install tornado
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Tornado"></category><category term="Web"></category><category term="Framework"></category><category term="WebSocket"></category></entry></feed>